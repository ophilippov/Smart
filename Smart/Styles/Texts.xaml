<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:local="clr-namespace:Smart">

    <ResourceDictionary.MergedDictionaries>
        <!-- The order is important-->
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Window Header text-->
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 2"/>
    </Style>

    <!--Dialog Header text-->
    <Style TargetType="{x:Type TextBlock}" x:Key="DialogHeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBlueBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 2"/>
    </Style>

    <!--Logo Textblock-->
    <Style TargetType="{x:Type TextBlock}" x:Key="LogoText">
        <Setter Property="Padding" Value="0 0 0 1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property= "Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemiLight}"/>
    </Style>

    <!--Login header textblock-->
    <Style TargetType="{x:Type TextBlock}" x:Key="LoginHeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeVeryLarge}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 0 0 5"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBlueBrush}"/>

    </Style>

    <!-- Common TextBox style-->
    <Style x:Key="TextBoxCommon" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemiLight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="Padding" Value="3 5 5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxNormalBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Original-->
                        <Border Grid.Row="1"
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">

                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--PlaceholderText-->
                        <TextBlock Text="{TemplateBinding Tag}" IsHitTestVisible="False" x:Name="placeholder" 
                                   FontFamily="{StaticResource SegoeUILight}"
                                   
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{StaticResource PlaceholderBrush}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
                                    <Setter Property="Margin"  Value="0 0 0 -5"/>
                                    <Setter Property="Grid.Row" Value="0"/>
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
                                            <Setter Property="Margin"  Value="4 5 5 1"/>
                                            <Setter Property="Grid.Row" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="placeholder" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="FontSize" TargetName="placeholder" Value="{StaticResource FontSizeSmall}"/>
                            <Setter Property="Margin" TargetName="placeholder" Value="0 0 0 -5"/>
                            <Setter Property="Grid.Row" TargetName="placeholder" Value="0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxTypingBrush}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common PasswordBox style-->
    <Style x:Key="PasswordBoxCommon" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemiLight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="Padding" Value="3 5 5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxNormalBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Original-->
                        <Border Grid.Row="1"
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">

                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--PlaceholderText-->
                        <TextBlock Text="{TemplateBinding Tag}" IsHitTestVisible="False" x:Name="placeholder" 
                                   FontFamily="{StaticResource SegoeUILight}"
                                   FontSize="{TemplateBinding local:HasTextProperty.Value, Converter={local:BoolToFontSizeValueConverter}}"
                                   Margin="{TemplateBinding local:HasTextProperty.Value, Converter={local:BoolToMarginValueConverter}}"
                                   Grid.Row="{TemplateBinding local:HasTextProperty.Value, Converter={local:BoolToGridRowValueConverter}}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{StaticResource PlaceholderBrush}">
                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="placeholder" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="FontSize" TargetName="placeholder" Value="{StaticResource FontSizeSmall}"/>
                            <Setter Property="Margin" TargetName="placeholder" Value="0 0 0 -5"/>
                            <Setter Property="Grid.Row" TargetName="placeholder" Value="0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxTypingBrush}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Spinning Text Style -->
    <Style x:Key="SpinningText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource FA4Regular}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>

        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform/>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                 From="0"
                                 To="360"
                                 Duration="0:0:2"
                                 RepeatBehavior="Forever"/>
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}"/>

                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <!--Common TextBlock Style-->
    <Style x:Key="TextBlockCommon" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>


    <!-- Common Open TextBox style-->
    <Style x:Key="TextBoxOpenCommon" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemiLight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="Padding" Value="3 5 5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxNormalBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Original-->
                        <Border Grid.Row="1"
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">

                            <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <!--PlaceholderText-->
                        <TextBlock Text="{TemplateBinding Tag}" IsHitTestVisible="False" x:Name="placeholder" 
                                   FontFamily="{StaticResource SegoeUILight}"
                                   FontSize="{StaticResource FontSizeSmall}"
                                   Margin="0 0 0 -5"
                                   Grid.Row="0"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{StaticResource PlaceholderBrush}">
                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" TargetName="placeholder" Value="{StaticResource TextBoxDisabledBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBoxDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="FontSize" TargetName="placeholder" Value="{StaticResource FontSizeSmall}"/>
                            <Setter Property="Margin" TargetName="placeholder" Value="0 0 0 -5"/>
                            <Setter Property="Grid.Row" TargetName="placeholder" Value="0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBoxTypingBrush}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common DatePicker style-->
    <Style x:Key="DatePickerCommon" TargetType="{x:Type DatePicker}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxNormalBrush}"/>
        <Setter Property="CalendarStyle" Value="{StaticResource CalendarDSCommon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.2" To="Normal"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation 
                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                            Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="Icon"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimation 
                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                            Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="Icon"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0"
                                                                        To="{StaticResource CalendarButtonDisabled}"
                                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                        Storyboard.TargetName="Icon"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="Transparent" HorizontalAlignment="Center" Height="Auto" Margin="0" VerticalAlignment="Center" Width="Auto">
                                            <TextBlock x:Name ="Icon" Text="{StaticResource MDDatePickerIcon}"
                                                       FontFamily="{StaticResource MaterialDesign}"
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       FontSize="{StaticResource FontSizePreLarge}"
                                                       Foreground="{StaticResource ForegroundDarkBrush}"/>
                                        </Grid>
                                    </Grid>

                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button Cursor="Hand" x:Name="PART_Button"
                                    Grid.Column="1"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    HorizontalAlignment="Left"
                                    Margin="6,0,0,-2"
                                    Grid.Row="0" 
                                    Template="{StaticResource DropDownButtonTemplate}"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Bottom"
                                    Width="20"/>
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Column="0"
                                               Focusable="{TemplateBinding Focusable}"
                                               Grid.Row="0"
                                               Style="{StaticResource TextBoxOpenCommon}"
                                               Tag="{TemplateBinding Tag}"
                                               />
                            <Popup 
                                Grid.ColumnSpan="2" 
                                   Grid.Column="0"
                                   IsHitTestVisible="False"
                                   x:Name="PART_Popup" 
                                   AllowsTransparency="True" 
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_TextBox}"
                                   StaysOpen="False"
                                   PopupAnimation="Slide"
                                   
                                   >
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_TextBox"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common Calendar Style (With Dropshadow)-->
    <Style x:Key="CalendarDSCommon" TargetType="{x:Type Calendar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonCommon}"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonCommon}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemDSCommon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"  Style="{TemplateBinding CalendarItemStyle}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common Calendar Style-->
    <Style x:Key="CalendarCommon" TargetType="{x:Type Calendar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonCommon}"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonCommon}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemCommon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"  Style="{TemplateBinding CalendarItemStyle}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Common CalendarButtonStyle-->
    <Style x:Key="CalendarButtonCommon" TargetType="{x:Type CalendarButton}">
        <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
        <Setter Property="MinWidth" Value="42"/>
        <Setter Property="MinHeight" Value="42"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource CalendarButtonHover}"
                                                        Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="Background"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource CalendarButtonPressed}"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="NormalText"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource CalendarButtonDisabled}"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="NormalText"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="SelectedBackground"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource CalendarButtonInactive}" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="NormalText"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" 
                                                                       Storyboard.TargetProperty="Visibility" 
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" 
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedBackground" 
                                   Fill="Transparent"
                                   StrokeThickness="1"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource CalendarButtonSelectedBrush}" 
                                   Opacity="0"/>
                        <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="NormalText"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="1,0,1,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   IsHitTestVisible="false" 
                                   Stroke="{StaticResource CalendarButtonSelectedBrush}" 
                                   StrokeThickness="1" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Common CalendarDayButtonStyle-->
    <Style x:Key="CalendarDayButtonCommon" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="HighlightBackground"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                         To="{StaticResource CalendarButtonDisabled}"
                                                         Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                         Storyboard.TargetName="NormalText"/>
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected"/>


                                <VisualState x:Name="Selected">
                                    <Storyboard>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DayButtonFocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                        To="0.7" 
                                                        Storyboard.TargetProperty="Opacity"
                                                        Storyboard.TargetName="NormalText"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay"/>
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                         To="{StaticResource CalendarButtonToday}" 
                                                         Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                         Storyboard.TargetName="NormalText"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay"/>
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource CalendarBlackout}" 
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="NormalText"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Rectangle x:Name="HighlightBackground" 
                                   Fill="{StaticResource CalendarButtonHoverBrush}"
                                   StrokeThickness="0"
                                   Opacity="0"
                                   />

                        <ContentPresenter x:Name="NormalText" 
                                          TextElement.Foreground="{TemplateBinding Foreground}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="5,1,5,1"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <Rectangle x:Name="DayButtonFocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{StaticResource CalendarButtonSelectedBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Common CalendarItem Style (With DropShadow) -->
    <Style x:Key="CalendarItemDSCommon" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemibold}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">

                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock x:Name="DayTitle" Foreground="{StaticResource ForegroundDarkBlueBrush}"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       FontFamily="{StaticResource SegoeUIRegular}"
                                       HorizontalAlignment="Center" Margin="0,6,0,6"
                                       Text="{Binding}" VerticalAlignment="Center"/>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" TargetName="DayTitle" Value="Red"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                       Storyboard.TargetName="ItemBorder"
                                                       Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                       To="{StaticResource CalendarButtonDisabled}"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border  Padding="5 5 5 5">
                            <Grid>

                                <Border BorderThickness="1" BorderBrush="{StaticResource PopupBorderBrush}"  Margin="1 1 1 1">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" Direction="128" BlurRadius="8" Opacity="0.9"/>
                                    </Border.Effect>
                                </Border>

                                <Border x:Name="ItemBorder"
                                        BorderBrush="{StaticResource PopupBorderBrush}"
                                        BorderThickness="1"
                                        Background="{StaticResource MenuBackgroundBrush}">

                                    <Grid>
                                        <Grid.Resources>
                                            <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="LeftArrow"
                                                Text="{StaticResource LeftAngleArrowIcon}"
                                                       FontFamily="{StaticResource FA4Regular}"
                                                       FontSize="{StaticResource FontSizePreLarge}"
                                                       Foreground="{StaticResource CalendarArrowButtonNormalBrush}"
                                                       Margin="14 1 0 0"/>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="RightArrow"
                                                Text="{StaticResource RightAngleArrowIcon}"
                                                       FontFamily="{StaticResource FA4Regular}"
                                                       FontSize="{StaticResource FontSizePreLarge}"
                                                       Foreground="{StaticResource CalendarArrowButtonNormalBrush}"
                                                       Margin="8 1 0 0"/>
                                                </Grid>
                                            </ControlTemplate>
                                            <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">

                                                <Grid Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <ContentPresenter x:Name="buttonContent"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                                  Content="{TemplateBinding Content}" 
                                                                  TextElement.Foreground="{StaticResource ForegroundDarkBrush}"
                                                                  HorizontalAlignment="Center"
                                                                  Margin="1,9,1,8" 
                                                                  VerticalAlignment="Center"
                                                                  TextBlock.FontSize="{StaticResource FontSizeSmall}"
                                                                   />
                                                </Grid>
                                            </ControlTemplate>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="28"/>
                                        <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center"/>
                                        <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="28"/>
                                        <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                        <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,6,7,6" Grid.Row="1" Visibility="Hidden">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                        </Grid>
                                    </Grid>

                                </Border>
                            </Grid>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource CalendarButtonDisabledBrush}" TargetName="ItemBorder"/>

                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Common CalendarItem Style -->
    <Style x:Key="CalendarItemCommon" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISemibold}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">

                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock x:Name="DayTitle" Foreground="{StaticResource ForegroundDarkBlueBrush}"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       FontFamily="{StaticResource SegoeUIRegular}"
                                       HorizontalAlignment="Center" Margin="0,6,0,6"
                                       Text="{Binding}" VerticalAlignment="Center"/>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" TargetName="DayTitle" Value="Red"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                       Storyboard.TargetName="ItemBorder"
                                                       Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                       To="{StaticResource CalendarButtonDisabled}"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="ItemBorder"
                                        BorderBrush="{StaticResource PopupBorderBrush}"
                                        BorderThickness="1"
                                        Background="{StaticResource MenuBackgroundBrush}">

                            <Grid>
                                <Grid.Resources>
                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="LeftArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <TextBlock x:Name="LeftArrow"
                                                Text="{StaticResource LeftAngleArrowIcon}"
                                                       FontFamily="{StaticResource FA4Regular}"
                                                       FontSize="{StaticResource FontSizePreLarge}"
                                                       Foreground="{StaticResource CalendarArrowButtonNormalBrush}"
                                                       Margin="14 1 0 0"/>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="RightArrow"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <TextBlock x:Name="RightArrow"
                                                Text="{StaticResource RightAngleArrowIcon}"
                                                       FontFamily="{StaticResource FA4Regular}"
                                                       FontSize="{StaticResource FontSizePreLarge}"
                                                       Foreground="{StaticResource CalendarArrowButtonNormalBrush}"
                                                       Margin="8 1 0 0"/>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">

                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonHover}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Pressed">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarArrowButtonPressed}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0" 
                                                                            To="{StaticResource CalendarButtonDisabled}" 
                                                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="buttonContent"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentPresenter x:Name="buttonContent"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                                  Content="{TemplateBinding Content}" 
                                                                  TextElement.Foreground="{StaticResource ForegroundDarkBrush}"
                                                                  HorizontalAlignment="Center"
                                                                  Margin="1,9,1,8" 
                                                                  VerticalAlignment="Center"
                                                                  TextBlock.FontSize="{StaticResource FontSizeSmall}"
                                                                   />
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="28"/>
                                <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold" Focusable="False" FontSize="10.5" HorizontalAlignment="Center" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Center"/>
                                <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="28"/>
                                <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="6,6,7,6" Grid.Row="1" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                </Grid>
                            </Grid>

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource CalendarButtonDisabledBrush}" TargetName="ItemBorder"/>

                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CheckBox Common Style -->
    <Style x:Key="CheckBoxCommon" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TextElement.FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="TextElement.FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">


                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="markGrid">
                            <Border x:Name="checkBoxBorder" 
                                BorderBrush="{StaticResource CheckBoxNormalBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1"
                                Width="15"
                                Height="15"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock x:Name="optionMark"
                                       Text="{StaticResource CheckIcon}"
                                       FontFamily="{StaticResource FA5Solid}"
                                       FontSize="{StaticResource FontSizeSemiLarge}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="3 -1 0 0 "
                                       Opacity="0"/>


                            <Border x:Name="indeterminateMark"
                                    BorderBrush="{StaticResource CheckBoxNormalBrush}"
                                    Background="{StaticResource CheckBoxNormalBrush}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderThickness="0"
                                    Width="9"
                                    Height="9"
                                    Margin="4 4 0 0" Opacity="0"/>
                        </Grid>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   x:Name="contentPresenter" 
                                   Grid.Column="1"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   TextWrapping="Wrap"
                                   LineHeight="14"
                                   LineStackingStrategy="BlockLineHeight"
                                                                                                    
                                   />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="6,-1,0,2"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource CheckBoxHover}"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="checkBoxBorder" 
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ColorAnimation To="{StaticResource CheckBoxHover}"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="optionMark" 
                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                    <ColorAnimation To="{StaticResource CheckBoxHover}"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="indeterminateMark" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave" >
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource CheckBoxNormal}"
                                                    Duration="0:0:0.1" 
                                                    Storyboard.TargetName="checkBoxBorder" 
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>

                                    <ColorAnimation To="{StaticResource CheckBoxNormal}"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="optionMark" 
                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>
                                    <ColorAnimation To="{StaticResource CheckBoxNormal}"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="indeterminateMark" 
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxDisabledBrush}" TargetName="checkBoxBorder"/>
                            <Setter Property="Background" Value="{StaticResource CheckBoxDisabledBrush}" TargetName="indeterminateMark"/>
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxDisabledBrush}" TargetName="optionMark"/>
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxDisabledBrush}" TargetName="contentPresenter"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxPressedBrush}" TargetName="checkBoxBorder"/>
                            <Setter Property="Background" Value="{StaticResource CheckBoxPressedBrush}" TargetName="indeterminateMark"/>
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxPressedBrush}" TargetName="optionMark"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" Value="0" TargetName="indeterminateMark"/>
                            <Setter Property="Opacity" Value="1" TargetName="optionMark"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="1" TargetName="indeterminateMark"/>
                            <Setter Property="Opacity" Value="0" TargetName="optionMark"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Common TextIcon MaterialDesign Style-->
    <Style x:Key="TextIconMDCommon" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesign}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizePreLarge}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>


    <!--Common ComboBoxToogleButton Style-->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            SnapsToDevicePixels="true"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBoxNormalBrush}">
                        <Border x:Name="splitBorder"
                                Width="20"
                                SnapsToDevicePixels="true"
                                Margin="0" 
                                HorizontalAlignment="Right" 
                                BorderThickness="1"
                                BorderBrush="Transparent">

                            <TextBlock x:Name="arrow"
                                       VerticalAlignment="Center"
                                       Margin="0 5 -1 0"
                                       HorizontalAlignment="Right"
                                       Foreground="{StaticResource ComboBoxArrowNormalBrush}"
                                       FontFamily="{StaticResource FA4Regular}"
                                       FontSize="{StaticResource FontSizePreLarge}"
                                       Text="{StaticResource DownAngleArrowIcon}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBoxArrowHoverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBoxHoverBrush}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBoxArrowPressedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBoxPressedBrush}"/>

                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBoxArrowDisabledBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBoxDisabledBrush}"/>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" TargetName="arrow" Value="{StaticResource ComboBoxArrowPressedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBoxPressedBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Common ComboBox Template-->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="20" Width="20"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="20"
                   PopupAnimation="Slide"
                   Placement="Bottom"
                   >
                <Border Padding="5"  
                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                         MinWidth="{Binding ActualWidth, ElementName=templateRoot}">

                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" Direction="128" BlurRadius="8" Opacity="0.2"/>
                    </Border.Effect>


                    <Border x:Name="dropDownBorder" BorderBrush="{StaticResource PopupBorderBrush}" 
                            BorderThickness="1"
                            Background="{StaticResource MenuBackgroundBrush}">

                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left" 
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false"
                              Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">

            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Common ComboBox Editable TextBox Style-->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Common ComboBox Template-->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="20" Width="20"/>
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="Slide"
                   Placement="Bottom">

                <Border Padding="5"  
                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                         MinWidth="{Binding ActualWidth, ElementName=templateRoot}">

                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" Direction="128" BlurRadius="8" Opacity="0.2"/>
                    </Border.Effect>
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="1" 
                           
                            Background="{StaticResource MenuBackgroundBrush}">

                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" 
                                        HorizontalAlignment="Left" 
                                        Height="0" 
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>

                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border"
                    Background="Transparent"
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}"
                         Style="{StaticResource ComboBoxEditableTextBox}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">

            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">

            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Common ComboBox Style-->
    <Style x:Key="ComboBoxCommon" TargetType="{x:Type ComboBox}">

        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxNormalBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="6,3,5,2"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>



                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Common ComboBox Item Style-->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="Padding" Value="10 2"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Bd"
                                    Value="{StaticResource ComboBoxItemDisabledBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="{StaticResource ComboBoxItemHover}"
                                                        Storyboard.TargetName="Bd"
                                                        Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        To="Transparent"
                                                        Storyboard.TargetName="Bd"
                                                        Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Bd" 
                                    Value="{StaticResource ComboBoxItemSelectedBrush}"/>
                        </Trigger>
                       
                        

                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ComboBoxItemHoverBrush}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for the ManagerTabInfoIcon-->
    <Style TargetType="{x:Type TextBlock}" x:Key="ManagerTabInfoIcon">
        <Setter Property="Text" Value="{StaticResource MDInformation}"/>
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesign}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLargest}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--Style for the Ooops... message-->
    <Style TargetType="{x:Type TextBlock}" x:Key="Ooops">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="Foreground" Value="{StaticResource SemiDarkBlueBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUIRegular}"/>
        
    </Style>

    <!--Icon ComboBoxToogleButton Style-->
    <Style x:Key="IconComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLargest}"/>
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesign}"/>
        <Setter Property="Padding" Value="5 0 5 3"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        
                        
                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                                >

                            <Grid>
                                <Border x:Name="checkBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{StaticResource MenuButtonHoverBrush}"
                                        Visibility="Hidden"
                                        SnapsToDevicePixels="True"/>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="50"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto" MaxHeight="16"/>
                                        <RowDefinition Height="15"/>
                                    </Grid.RowDefinitions>

                                    <!--Icon-->
                                    <TextBlock Grid.Row="1"
                                   x:Name="textIcon"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding Tag}"
                                   FontFamily="{TemplateBinding FontFamily}"/>

                                    <!--Text-->
                                    <TextBlock Grid.Row="3"
                                       x:Name="textContent"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="{StaticResource SegoeUILight}"
                                       FontSize="{StaticResource FontSizeRegular}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="False"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Visibility="Visible"
                                       TextWrapping="Wrap"
                                       TextAlignment="Center"
                                       LineHeight="14"
                                       LineStackingStrategy="BlockLineHeight"/>
                                    
                                    <!--Chevron-->
                                    <TextBlock Grid.Row="4"
                                               x:Name="textChevron"
                                               Text="{StaticResource DownAngleArrowIcon}"
                                               FontFamily="{StaticResource FA4Regular}"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Center"
                                               FontSize="{StaticResource FontSizeSemiLarge}"
                                               Margin="0 0 0 1"
                                               />


                                </Grid>
                            </Grid>

                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="True" >
                            <Setter Property="Foreground"
                                    TargetName="textIcon"
                                    Value="{StaticResource MenuButtonPressedBrush}"/>
                            <Setter Property="Foreground"
                                    TargetName="textChevron"
                                    Value="{StaticResource MenuButtonPressedBrush}"/>
                            <Setter Property="Visibility"
                                    TargetName="checkBorder"
                                    Value="Visible"/>
                            <Setter Property="Foreground"
                                    TargetName="textContent"
                                    Value="{StaticResource MenuButtonPressedBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MenuButtonHover}"
                                                    Duration="0:0:0.2"
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Transparent"
                                                    Duration="0:0:0.2" 
                                                    Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        

                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    TargetName="textIcon"
                                    Value="{StaticResource MenuButtonDisabledBrush}"/>
                            <Setter Property="Foreground"
                                    TargetName="textContent"
                                    Value="{StaticResource MenuButtonDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="false">
                            <Setter Property="Visibility" TargetName="textContent" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Icon ComboBox Template-->
    <ControlTemplate x:Key="IconComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="Slide"
                   Placement="Bottom"
                   >
                <Border Padding="5"  
                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                         MinWidth="{Binding ActualWidth, ElementName=templateRoot}">

                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="0" Direction="128" BlurRadius="8" Opacity="0.2"/>
                    </Border.Effect>


                    <Border x:Name="dropDownBorder" BorderBrush="{StaticResource PopupBorderBrush}" 
                            BorderThickness="1"
                            Background="{StaticResource MenuBackgroundBrush}">

                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left" 
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            
            <ToggleButton x:Name="toggleButton" 
                          Content="{TemplateBinding SelectionBoxItem}"
                          Tag="{TemplateBinding SelectedItem, Converter={local:SelectedItemToTagValueConverter}}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{StaticResource IconComboBoxToggleButton}"
                          Margin="{TemplateBinding Padding}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          SnapsToDevicePixels="True"
                          Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                          Width="{TemplateBinding Width}"
                          FontSize="{TemplateBinding FontSize}"
                          />
            
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">

            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Icon ComboBox Style-->
    <Style x:Key="IconComboBox" TargetType="{x:Type ComboBox}">

        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxNormalBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUILight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeLargest}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource IconComboBoxTemplate}"/>

    </Style>

    <!--Big ComboBoxIcon Item Style-->
    <Style x:Key="BigIconComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesign}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeVeryLarge}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBrush}"/>
        <Setter Property="Padding" Value="7 2 7 2"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!--Left spacing-->
                                <ColumnDefinition Width="{TemplateBinding Padding, Converter={local:MarginLeftToWidthValueConverter}}"/>
                                <!--Icon-->
                                <ColumnDefinition Width="Auto"/>
                                <!--Text-->
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1"
                                   x:Name="textIcon"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding Tag}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                       
                                      />


                            <!--Text-->
                            <TextBlock Grid.Column="2"
                                       x:Name="textContent"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                       VerticalAlignment="Center"
                                       FontFamily="{StaticResource SegoeUILight}"
                                       FontSize="{StaticResource FontSizeRegular}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="False"
                                       Margin="{TemplateBinding Padding}"
                                       Visibility="Visible"
                                  />
                        </Grid>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="textIcon"
                                    Value="{StaticResource ComboBoxItemDisabledBrush}"/>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="textContent"
                                    Value="{StaticResource ComboBoxItemDisabledBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        To="{StaticResource ComboBoxItemHover}"
                                                        Storyboard.TargetName="Bd"
                                                        Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                                        To="Transparent"
                                                        Storyboard.TargetName="Bd"
                                                        Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="textIcon" 
                                    Value="{StaticResource ComboBoxItemSelectedBrush}"/>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="textContent" 
                                    Value="{StaticResource ComboBoxItemSelectedBrush}"/>
                        </Trigger>



                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{StaticResource ComboBoxItemHoverBrush}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>